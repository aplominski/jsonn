name: Build and publish as release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger only on version tags like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies
      - name: Setup dependencies
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt update
            sudo apt install -y ninja-build meson gcc g++
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install ninja meson
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            choco install meson ninja
          fi

      # Configure and build with Meson
      - name: Build project
        run: |
          meson setup build --buildtype release
          meson compile -C build

      # Package artifacts
      - name: Package artifacts
        run: |
          mkdir -p artifacts
          # Header-only case
          cp -r include artifacts/
          # Shared library (.so/.dylib/.dll)
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            cp build/libjsonn.so artifacts/
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            cp build/libjsonn.dylib artifacts/
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            cp build/jsonn.dll artifacts/
          fi

      # Upload release via official GitHub Action
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Automated release of jsonn"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload release assets
      - name: Upload release assets
        uses: softprops/turnstyle@v1
        with:
          path: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
